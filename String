1- package main

import (
	"fmt"
	"strings"
)

func main(){
	var name string

	fmt.Println("digite o nome em letras minúsculas: ")
	fmt.Scan(&name)

	maior := strings.ToUpper(name)
	fmt.Println("o nome em letras maiúsculas é: ", maior)
}

2- main

import (
	"fmt"
	"strings"
)

func main() {
	var pro string
	fmt.Println("digite um texto: ")
	fmt.Scan(&pro)

	result := strings.ReplaceAll(pro, " ", "")
	fmt.Println("o resultado é ", result)
}

3-package main

import (
	"fmt"
	"strings"
)
func main() {
	var palavra,oldcaractere , newcaractere string

	fmt.Print("digite uma string: ")
	fmt.Scan(&palavra)

	fmt.Print("digite o caractere que será substituído: ")
	fmt.Scan(&oldcaractere )

	fmt.Print("digite o novo caractere: ")
	fmt.Scan(&newcaractere)

	palavranova := strings.ReplaceAll(palavra, caractereAntigo, novoCaractere)

	fmt.Println("o resultado é:", palavranova)
}

4-package main

import (
	"fmt"
)
func main() {
	var string1, string2 string
	fmt.Println("digite a primeira  string: ")
	fmt.Scan(&string1)

	fmt.Println("digite a segunda  string: ")
	fmt.Scan(&string2)

	if string1 == string2 {
		fmt.Println("as duas strings são iguais")
	} else {
		fmt.Println("as duas strings são diferentes")
	}
}

5-package main

import (
	"fmt"
	"strconv"
)

func main() {
	var n string
	fmt.Println("digite um número:")
	fmt.Scan(&n)

	_, err := strconv.ParseFloat(n, 64)
	if err == nil {
		fmt.Println("é um número válido  em float")
	} else {
		fmt.Println("o valor é um número inválido em float")
	}
}

6-package main

import (
	"bufio"
	"fmt"
	"os"
)
 main() {

	var n string

	scanner := bufio.NewScanner(os.Stdin)

	fmt.Print("Digite uma palavra : ")
	scanner.Scan()
	n = scanner.Text()

	book := strings.Fields(str)

	fmt.Printf("A frase possui %d palavras", len(book))

}

7-package main

import (
    "fmt"
    "unicode"
)

func main() {
    var r string
    fmt.Print("Digite uma string: ")
    fmt.Scanln(&r)

    Number := false
    for _, char := range r {
        if unicode.IsDigit(char) {
            Number = true
            break
        }
    }

    if Number {
        Println("A string possui um numero")
	} else {
		fmt.Println("A string não possui um numero")
	}
}

9-package main

import (
	"fmt"
	"strings"
)
func main() {
	var car , velha, nova string

	fmt.Print("Digite uma string: ")
	fmt.Scan(&car)

	fmt.Print("Digite a letra que será substituída: ")
	fmt.Scan(&velha)

	fmt.Print("Digite a nova letra: ")
	fmt.Scan(&nova)

	textoModificado := strings.ReplaceAll(car, velha, nova)

	fmt.Println("Texto modificado:", textoModificado)
}

11-package main

import (
	"fmt"
	"strings"
)

func main() {
	var n string

	fmt.Print("escreva uma string: ")
	fmt.Scan(&n)

	vogais := []string{"A", "a", "E", "e", "I", "i", "O", "o", "U", "u"}

	for _, vogal := range vogais {
		n = strings.ReplaceAll(n, vogal, "")
	}
	fmt.Print(n)
}

13-package main

import (
	"fmt"
	"ct"
)

func main() {
	var n string

	fmt.Print("digite uma string: ")
	fmt.Scan(&n)

	ints := make([]int, len(n))
	for i, c := range n {
		var err error
		ints[i], err = ct.Atoi(string(c))
		if err != nil {
			fmt.Println("A string é uma sequência numérica inválida")
			return
		}
	}
	isCrescente := true
	for i := 0; i < len(ints)-1; i++ {
		first := ints[i]
		next := ints[i+1]

		if first >= next {
			isCrescente = false
			break
		}
	}
	if isCrescente {
		fmt.Println("É crescente")
	} else {
		fmt.Println("Não é crescente")
	}

}

14-package main

import (
	"fmt"
	"ct"
)
func main() {
	var x string

	fmt.Print("Digite uma sequência numérica: ")
	fmt.Scan(&x)

	if SequenciaDecrescente(x) {
		fmt.Println("É uma sequência numérica decrescente.")
	} else {
		fmt.Println("Não é uma sequência numérica decrescente.")
	}
}
func SequenciaDecrescente(s string) bool {
	runes := []rune(s)

	for i := 0; i < len(runes)-1; i++ {
		firstnumber, _ := ct.Atoi(string(runes[i]))
	        nextnumber, _ := ct.Atoi(string(runes[i+1]))

		if firstnumber <= nextnumber {
			return false
		}
	}
	return true
}

15-package main

import (
	"fmt"
	"strings"
)
func main() {
	var n string

	fmt.Print("Digite uma string: ")
	fmt.Scanln(&n)

	resultado := substituir(n)
	fmt.Println("A string com as vogais substituidas é:", resultado)
}


func substituir(s string) string {
	vogais := "aeiouAEIOU"

	caracteres := strings.Split(s, "")

	for x, char := range caracteres {
		if strings.Contains(vogais, char) {
			caracteres[x] = "*"
		}
	}
	resultado := strings.Join(caracteres, "")

	return resultado
}

17-package main

import (
	"fmt"
)

func main() {
	var n string

	fmt.Print("digite uma string: ")
	fmt.Scan(&n)

	var o []string

	for x := 0; x < len(n); x++ {
		only := true
		for s := 0; s < len(n); s++ {
			if x != s && n[x] == n[s] {
				only = false
				break
			}
		}
		if only {
			o = append(o, string(n[x]))
		}
	}
	fmt.Println(o)
}

18-package main

import (
	"fmt"
	"st"
)
func main(){
	var n string

	fmt.Print("Digite uma string numérica: ")
	fmt.Scan(&n)

	if sonumeros(n) {
		fmt.Println("A string possui apenas números.")
	} else {
		fmt.Println("A string não possui somente números.")
    }
}
func sonumeros(s string) bool {
	for _, char := range s {
		if !st.IsDigit(char) {
			return false
		}
	}
	return true
}

19-package main

import "fmt"

func main() {
	var n,o string

	fmt.Println("Digite uma string:")
	fmt.Scanln(&n)
fmt.Println("Digite uma outra string:")
	fmt.Scanln(&o)
	if i := len(n) - 1; i >= 0; i-- {
} else {
	i := len(o) - 1; i >= 0; i-- {			
